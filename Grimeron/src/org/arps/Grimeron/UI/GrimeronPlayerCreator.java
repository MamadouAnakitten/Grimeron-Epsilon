package org.arps.Grimeron.UI;

import java.awt.Color;
import java.util.ArrayList;
import org.arps.Grimeron.Grimeron;
import org.arps.Grimeron.entity.custom.Bot;
import org.arps.Grimeron.entity.custom.Human;
import org.arps.Grimeron.entity.Player;
import org.arps.Grimeron.entity.Tile;
import org.arps.Grimeron.utils.DBOperationHandler;

/**
 * Graphical interface for creating players.
 * @author Richard Hogans
 */
public class GrimeronPlayerCreator extends javax.swing.JFrame {

    private Player createdPlayer;
    
    private Grimeron game;
    private GrimeronGrid grid;
    private DBOperationHandler dbHandler;
    private GrimeronSetupFrame setupFrame;
    
    /**
     * Creates new form GrimeronPlayerCreator
     * @param game
     * @param setupFrame
     */
    public GrimeronPlayerCreator(Grimeron game, GrimeronSetupFrame setupFrame) {
        this.game = game;
        this.grid = game.getGameFrame().getGrid();
        this.dbHandler = game.getDBHandler();
        initComponents();
        this.setLocationSelector();
        this.setupFrame = setupFrame;
        this.botRadioButton.setSelected(true);
    }
    
    public Player getCreatedPlayer(){
        return this.createdPlayer;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeSelectorButtonGroup = new javax.swing.ButtonGroup();
        jComboBox1 = new javax.swing.JComboBox();
        playerCreatorPanel = new javax.swing.JPanel();
        typeText = new javax.swing.JLabel();
        botRadioButton = new javax.swing.JRadioButton();
        humanRadioButton = new javax.swing.JRadioButton();
        playerColorSelector = new javax.swing.JColorChooser();
        submitButton = new javax.swing.JButton();
        locationText = new javax.swing.JLabel();
        locationCombo = new javax.swing.JComboBox();
        customXLabel = new javax.swing.JLabel();
        customXSelector = new javax.swing.JTextField();
        customYLabel = new javax.swing.JLabel();
        customYSelector = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        playerNameSelector = new javax.swing.JTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Player Creator");
        setAlwaysOnTop(true);

        playerCreatorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Player Creator", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        typeText.setText("Type");

        typeSelectorButtonGroup.add(botRadioButton);
        botRadioButton.setSelected(true);
        botRadioButton.setText("Bot");

        typeSelectorButtonGroup.add(humanRadioButton);
        humanRadioButton.setText("Human");

        submitButton.setText("Create Player");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        locationText.setText("Starting Location");

        customXLabel.setText("Custom X");

        customXSelector.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        customXSelector.setText("Enter #");

        customYLabel.setText("Custom Y");

        customYSelector.setText("Enter #");

        jLabel1.setText("Name:");

        playerNameSelector.setText("Name");

        javax.swing.GroupLayout playerCreatorPanelLayout = new javax.swing.GroupLayout(playerCreatorPanel);
        playerCreatorPanel.setLayout(playerCreatorPanelLayout);
        playerCreatorPanelLayout.setHorizontalGroup(
            playerCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerCreatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerColorSelector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(playerCreatorPanelLayout.createSequentialGroup()
                        .addComponent(typeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(humanRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(locationText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customXLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customXSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customYLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customYSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, playerCreatorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerNameSelector)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        playerCreatorPanelLayout.setVerticalGroup(
            playerCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerCreatorPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(playerCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeText)
                    .addComponent(botRadioButton)
                    .addComponent(humanRadioButton)
                    .addComponent(locationText)
                    .addComponent(locationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customXLabel)
                    .addComponent(customXSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customYLabel)
                    .addComponent(customYSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playerCreatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(playerNameSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerColorSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerCreatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerCreatorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setLocationSelector(){
        ArrayList<Tile> liveTiles = grid.getLiveTiles();
        
        Tile upperLeft = grid.getTopLeft();
            StartingLocation.UPPERLEFT.setCoord(upperLeft.getGameX(), upperLeft.getGameY());
        Tile upperRight = grid.getTopRight();
            StartingLocation.UPPERRIGHT.setCoord(upperRight.getGameX(), upperRight.getGameY());
        Tile lowerLeft = grid.getBottomLeft();
            StartingLocation.LOWERLEFT.setCoord(lowerLeft.getGameX(), lowerLeft.getGameY());
        Tile lowerRight = grid.getBottomRight();
            StartingLocation.LOWERRIGHT.setCoord(lowerRight.getGameX(), lowerRight.getGameY());
            
        if(liveTiles.contains(upperLeft)){
            System.out.println(liveTiles.contains(upperLeft));
            locationCombo.addItem(StartingLocation.UPPERLEFT.getDescription());
        }
        if(liveTiles.contains(upperRight)){
            System.out.println(liveTiles.contains(upperRight));
            locationCombo.addItem(StartingLocation.UPPERRIGHT.getDescription());
        }
        if(liveTiles.contains(lowerLeft)){
            System.out.println(liveTiles.contains(lowerLeft));
            locationCombo.addItem(StartingLocation.LOWERLEFT.getDescription());
        }
        if(liveTiles.contains(lowerRight)){
            System.out.println(liveTiles.contains(lowerRight));
            locationCombo.addItem(StartingLocation.LOWERRIGHT.getDescription());
        }
        
        locationCombo.addItem(StartingLocation.CUSTOM.getDescription());
    }
    
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        Player.Type type = Player.Type.BOT; //Default to Bot
        Color color = Color.WHITE; //Default Color
        String name = playerNameSelector.getText();
        
        ArrayList<Tile> allTiles = grid.getPieces();
        ArrayList<Tile> freeTiles = grid.getLiveTiles();
        
        Tile startingTile = freeTiles.get(0);
        
        if(humanRadioButton.isSelected()){
            type = Player.Type.HUMAN;
        } else {
            type = Player.Type.BOT;
        }
        
        if(StartingLocation.getLocationEnumOf((String)locationCombo.getSelectedItem()).equals(StartingLocation.CUSTOM)){
            try{
                int x = Integer.parseInt(customXSelector.getText());
                int y = Integer.parseInt(customYSelector.getText());
                
                game.getRuleSet().incognitoMode = true;
                
                startingTile = grid.getTileAt(x, y);
            }catch(Exception ex){
                
            }
        }else{
            StartingLocation startEnum = StartingLocation.getLocationEnumOf((String)locationCombo.getSelectedItem());
            startingTile = startEnum.toTile(grid);
        }
        
        try{
            int r = playerColorSelector.getColor().getRed();
            int g = playerColorSelector.getColor().getGreen();
            int b = playerColorSelector.getColor().getBlue();
            
            color = new Color(r, g, b);
        }catch(Exception ex){
            color = Color.WHITE;
        }
        
        if(type.equals(Player.Type.BOT)){
            createdPlayer = new Bot(startingTile, name, dbHandler, grid);
        }
        
        if(type.equals(Player.Type.HUMAN)){
            createdPlayer = new Human(startingTile, name, grid);
        }
        createdPlayer.setColor(color);
        
        game.getRuleSet().addPlayer(createdPlayer);
        
        setupFrame.getRegisteredPlayerCombo().removeAllItems();
        for(Player player: game.getRuleSet().getPlayers()){
            setupFrame.getRegisteredPlayerCombo().addItem(player);
            setupFrame.getRegisteredPlayerCombo().repaint();
        }
        
        startingTile.setState(Tile.State.OCCUPIED);
        
        this.dispose();
    }//GEN-LAST:event_submitButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JRadioButton botRadioButton;
    private javax.swing.JLabel customXLabel;
    private javax.swing.JTextField customXSelector;
    private javax.swing.JLabel customYLabel;
    private javax.swing.JTextField customYSelector;
    public javax.swing.JRadioButton humanRadioButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JComboBox locationCombo;
    private javax.swing.JLabel locationText;
    public javax.swing.JColorChooser playerColorSelector;
    public javax.swing.JPanel playerCreatorPanel;
    public javax.swing.JTextField playerNameSelector;
    private javax.swing.JButton submitButton;
    private javax.swing.ButtonGroup typeSelectorButtonGroup;
    private javax.swing.JLabel typeText;
    // End of variables declaration//GEN-END:variables

    public enum StartingLocation {
        UPPERLEFT(0, 0, "Upper Left"), UPPERRIGHT(0, 0, "Upper Right"), LOWERLEFT(0, 0, "Lower Left"), LOWERRIGHT(0, 0, "Lower Right"), CUSTOM(0, 0, "Custom");
        
        private int x;
        private int y;
        private String description;  
        
        private StartingLocation(int x, int y, String description){
            this.x = x;
            this.y = y;
            this.description = description;
        }
        
        public void setCoord(int x, int y){
            this.x = x;
            this.y = y;
        }
        
        public int getX(){
            return this.x;
        }
        
        public int getY(){
            return this.y;
        }
        
        public Tile toTile(GrimeronGrid grid){
             return grid.getTileAt(x, y);
        }
        
        public String getDescription(){
            return this.description;
        }
        
        public void setDescription(String description){
            this.description = description;
        }
        
        public static StartingLocation getLocationEnumOf(String description){
            for(StartingLocation locationEnum: StartingLocation.values()){
                if(locationEnum.getDescription().equals(description)){
                    return locationEnum;
                }
            }
            return null;
        }
    }
}
