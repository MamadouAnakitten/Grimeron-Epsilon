/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.arps.Grimeron.UI;

import org.arps.Grimeron.UI.Panels.GrimeronGrid;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.arps.Grimeron.Grimeron;
import org.arps.Grimeron.UI.Panels.GrimeronPanel;
import org.arps.Grimeron.console.Console;

/**
 *
 * @author richa_000
 */
public class GrimeronFrame extends javax.swing.JFrame {
    
    private GrimeronPanel preconfiguredGamePanel;
    private GrimeronGrid grid;
    private Grimeron game;
    private Console console;
    private volatile boolean restart = false;
    private volatile boolean waitingForStart = true;
    
    public GrimeronFrame(Grimeron game, Console console) {
        this.game = game;
        this.console = console;
        initPreComponents();
        setIcon();
        initComponents();
        updateConsole();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setupDialogue = new org.arps.Grimeron.UI.Panels.GameSetupDialogue(this, true, game.getRuleSet());
        mainTabbedPanel = new javax.swing.JTabbedPane();
        gamePanel = new javax.swing.JLayeredPane();
        grimeronPanel = preconfiguredGamePanel;
        jScrollPane2 = new javax.swing.JScrollPane();
        consoleOutputField = new javax.swing.JEditorPane();
        consoleInputField = new javax.swing.JFormattedTextField();
        text_restart = new javax.swing.JLabel();
        clickableYes = new javax.swing.JLabel();
        clickableNo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        playersPanel = new javax.swing.JPanel();
        playerCreatorPanel = new org.arps.Grimeron.UI.Panels.PlayerCreatorPanel(game, grid);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grimeron");
        setResizable(false);

        mainTabbedPanel.setBackground(new java.awt.Color(204, 204, 204));
        mainTabbedPanel.setOpaque(true);

        gamePanel.setBackground(new java.awt.Color(81, 81, 81));
        gamePanel.setOpaque(true);

        consoleOutputField.setEditable(false);
        consoleOutputField.setBackground(new java.awt.Color(232, 232, 255));
        consoleOutputField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        consoleOutputField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        consoleOutputField.setSelectionColor(new java.awt.Color(204, 255, 204));
        jScrollPane2.setViewportView(consoleOutputField);

        consoleInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                consoleInputFieldKeyPressed(evt);
            }
        });

        text_restart.setFont(new java.awt.Font("Golden Age", 0, 18)); // NOI18N
        text_restart.setForeground(new java.awt.Color(255, 255, 255));
        text_restart.setText("Restart Game?");
        text_restart.setVisible(false);

        clickableYes.setFont(new java.awt.Font("Golden Age", 0, 18)); // NOI18N
        clickableYes.setForeground(new java.awt.Color(204, 204, 204));
        clickableYes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        clickableYes.setText("Yes");
        clickableYes.setVisible(false);
        clickableYes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clickableYesMousePressed(evt);
            }
        });

        clickableNo.setFont(new java.awt.Font("Golden Age", 0, 18)); // NOI18N
        clickableNo.setForeground(new java.awt.Color(204, 204, 204));
        clickableNo.setText("No");
        clickableNo.setVisible(false);
        clickableNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clickableNoMousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Golden Age", 0, 72)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Grimeron");

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(grimeronPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(consoleInputField)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addComponent(text_restart)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clickableYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clickableNo, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(clickableYes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clickableNo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(text_restart, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consoleInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(grimeronPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gamePanel.setLayer(grimeronPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        gamePanel.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        gamePanel.setLayer(consoleInputField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        gamePanel.setLayer(text_restart, javax.swing.JLayeredPane.DEFAULT_LAYER);
        gamePanel.setLayer(clickableYes, javax.swing.JLayeredPane.DEFAULT_LAYER);
        gamePanel.setLayer(clickableNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        gamePanel.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        mainTabbedPanel.addTab("Game", new javax.swing.ImageIcon(getClass().getResource("/org/arps/Grimeron/UI/Images/G.png")), gamePanel); // NOI18N

        javax.swing.GroupLayout playersPanelLayout = new javax.swing.GroupLayout(playersPanel);
        playersPanel.setLayout(playersPanelLayout);
        playersPanelLayout.setHorizontalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addComponent(playerCreatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
        );
        playersPanelLayout.setVerticalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addComponent(playerCreatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 161, Short.MAX_VALUE))
        );

        mainTabbedPanel.addTab("Players", new javax.swing.ImageIcon(getClass().getResource("/org/arps/Grimeron/UI/Images/P.png")), playersPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1312, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consoleInputFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consoleInputFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            console.attemptCommand(consoleInputField.getText());
            consoleInputField.setText("");
        }

        consoleOutputField.setText(console.getOutput());
    }//GEN-LAST:event_consoleInputFieldKeyPressed

    private void clickableYesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickableYesMousePressed
        game.resetGame();
        restart = true;
        waitingForStart = false;
        try {
            Thread.sleep(5);
        } catch (InterruptedException ex) {
        }
    }//GEN-LAST:event_clickableYesMousePressed

    private void clickableNoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickableNoMousePressed
        waitingForStart = false;
        this.dispose();
    }//GEN-LAST:event_clickableNoMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel clickableNo;
    public javax.swing.JLabel clickableYes;
    private javax.swing.JFormattedTextField consoleInputField;
    private javax.swing.JEditorPane consoleOutputField;
    private javax.swing.JLayeredPane gamePanel;
    private org.arps.Grimeron.UI.Panels.GrimeronPanel grimeronPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane mainTabbedPanel;
    private org.arps.Grimeron.UI.Panels.PlayerCreatorPanel playerCreatorPanel;
    private javax.swing.JPanel playersPanel;
    private org.arps.Grimeron.UI.Panels.GameSetupDialogue setupDialogue;
    public javax.swing.JLabel text_restart;
    // End of variables declaration//GEN-END:variables
    
    private void initPreComponents(){
        grid = new GrimeronGrid(game.getRuleSet().dimensionSize, game.getRuleSet().dimensionSize);
        //stats = new StatisticSet(game);
        preconfiguredGamePanel = new GrimeronPanel(grid);
        //preconfiguredStatPanel = new StatisticPanel(stats);
    }
    
    public void lockToPlayerCreation()
    {
        mainTabbedPanel.setSelectedComponent(playersPanel);
        mainTabbedPanel.setEnabledAt(mainTabbedPanel.indexOfComponent(gamePanel), false);
    }
    
    public void unlockGame()
    {
        mainTabbedPanel.setEnabledAt(mainTabbedPanel.indexOfComponent(gamePanel), true);
        mainTabbedPanel.setSelectedComponent(gamePanel);
        this.restart = true;
        this.waitingForStart = false;
    }
    
    public void toggleResetText(boolean toggle){
        this.clickableNo.setVisible(toggle);
        this.clickableYes.setVisible(toggle);
        this.text_restart.setVisible(toggle);
    }

    public GrimeronGrid getGrid() {
        return grid;
    }

    public void setGrid(GrimeronGrid grid) {
        this.grid = grid;
    }
    
    public GrimeronPanel getGamePanel(){
        return this.grimeronPanel;
    }
    
    public void updateConsole(){
        try {
            Thread.sleep(5);
        } catch (InterruptedException ex) {
            Logger.getLogger(GrimeronFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        consoleOutputField.setText(console.getOutput());
    }
    
    public boolean getRestart(){
        return restart;
    }
    
    public void setRestart(boolean restart){
        this.restart = restart;
    }

    public boolean isWaitingForStart() {
        return waitingForStart;
    }

    public void setWaitingForStart(boolean waitingForRestart) {
        this.waitingForStart = waitingForRestart;
    }

    private void setIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/org/arps/Grimeron/UI/Images/G.png")));
    }
    
    public void openSetup()
    {
        this.setupDialogue.setVisible(true);
    }
}
