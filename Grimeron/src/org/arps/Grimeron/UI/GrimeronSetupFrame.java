/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.arps.Grimeron.UI;

import java.awt.Color;
import java.sql.Connection;
import java.util.Iterator;
import javax.swing.JComponent;
import javax.swing.JLabel;
import org.arps.Grimeron.Grimeron;
import org.arps.Grimeron.entity.Player;
import org.arps.Grimeron.entity.Tile;
import org.arps.Grimeron.entity.custom.Bot;
import org.arps.Grimeron.entity.custom.Human;
import org.arps.Grimeron.utils.DBConnector;
import org.arps.Grimeron.utils.DBOperationHandler;
import org.arps.Grimeron.utils.RuleSet;

/**
 *
 * @author richa_000
 */
public class GrimeronSetupFrame extends javax.swing.JFrame {

    private Grimeron game;
    
    private GrimeronGrid grid;
    
    private RuleSet ruleSet;
    private DBOperationHandler dbHandler;
    
    public volatile boolean isSetup = false;
    
    /**
     * Creates new setup frame and hands options over to a given ruleSet.
     * @param game
     */
    public GrimeronSetupFrame(Grimeron game) {
        this.game = game;
        this.grid = game.getGameFrame().getGrid();
        this.ruleSet = game.getRuleSet();
        this.dbHandler = game.getDBHandler();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        setupText = new javax.swing.JLabel();
        text_generalsettings = new javax.swing.JLabel();
        text_general_hide = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        generalPanel = new javax.swing.JLayeredPane();
        rapidCheckbox = new javax.swing.JCheckBox();
        gameCountInput = new javax.swing.JTextField();
        graphicOverrideEnabled = new javax.swing.JCheckBox();
        incognitoCheckBox = new javax.swing.JCheckBox();
        statisticModeSelection = new javax.swing.JCheckBox();
        gridDimensionField = new javax.swing.JFormattedTextField();
        gridDimensionText = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        text_player_settings = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        text_player_hide = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        playerCreationPanel = new javax.swing.JPanel();
        registeredPlayerCombo = new javax.swing.JComboBox();
        createdPlayersText = new javax.swing.JLabel();
        pTypeSubText = new javax.swing.JLabel();
        pStartLocSubText = new javax.swing.JLabel();
        pColorSubText = new javax.swing.JLabel();
        pTypeText = new javax.swing.JLabel();
        pStartLocText = new javax.swing.JLabel();
        pColorPanel = new javax.swing.JPanel();
        playerRegButton = new javax.swing.JButton();
        editPlayerButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        text_advancedsettings = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        text_advanced_hide = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        advancedPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        urlField = new javax.swing.JFormattedTextField();
        portField = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        usernameField = new javax.swing.JFormattedTextField();
        driverSelector = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        nameField = new javax.swing.JFormattedTextField();
        useConnection = new javax.swing.JCheckBox();
        testDBBtn = new javax.swing.JButton();
        text_teststatus = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        submitButton = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Database Port");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        setupText.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        setupText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        setupText.setText("Grimeron Game Setup");
        setupText.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        text_generalsettings.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_generalsettings.setText("General Settings");

        text_general_hide.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_general_hide.setText("[Hide]");
        text_general_hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_general_hideMousePressed(evt);
            }
        });

        generalPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rapidCheckbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rapidCheckbox.setText("Enable Rapid Mode");
        rapidCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rapidCheckboxActionPerformed(evt);
            }
        });

        gameCountInput.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        gameCountInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gameCountInput.setText("5");

        graphicOverrideEnabled.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        graphicOverrideEnabled.setText("Enable Rapid Graphics Override (Show Graphics)");
        graphicOverrideEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphicOverrideEnabledActionPerformed(evt);
            }
        });

        incognitoCheckBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        incognitoCheckBox.setText("Incognito Mode: Disables database learning and keeps AI knowledge constant.");
        incognitoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incognitoCheckBoxActionPerformed(evt);
            }
        });

        statisticModeSelection.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        statisticModeSelection.setText("Statistic Mode: (Requires Rapid Mode) Generates statistics chart alongside simulated games.");
        statisticModeSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statisticModeSelectionActionPerformed(evt);
            }
        });

        gridDimensionField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gridDimensionField.setText("11");

        gridDimensionText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        gridDimensionText.setText("Grid Dimension");

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addComponent(rapidCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gameCountInput, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graphicOverrideEnabled))
                    .addComponent(incognitoCheckBox)
                    .addComponent(statisticModeSelection)
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addComponent(gridDimensionText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gridDimensionField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(rapidCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graphicOverrideEnabled, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gameCountInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(incognitoCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statisticModeSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gridDimensionText, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridDimensionField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        generalPanel.setLayer(rapidCheckbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        generalPanel.setLayer(gameCountInput, javax.swing.JLayeredPane.DEFAULT_LAYER);
        generalPanel.setLayer(graphicOverrideEnabled, javax.swing.JLayeredPane.DEFAULT_LAYER);
        generalPanel.setLayer(incognitoCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        generalPanel.setLayer(statisticModeSelection, javax.swing.JLayeredPane.DEFAULT_LAYER);
        generalPanel.setLayer(gridDimensionField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        generalPanel.setLayer(gridDimensionText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        generalPanel.setLayer(jSeparator7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        text_player_settings.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_player_settings.setText("Player Settings");

        text_player_hide.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_player_hide.setText("[Hide]");
        text_player_hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_player_hideMousePressed(evt);
            }
        });

        playerCreationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Player Creator", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 51, 51))); // NOI18N

        registeredPlayerCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        registeredPlayerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Empty", " " }));
        registeredPlayerCombo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        registeredPlayerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registeredPlayerComboActionPerformed(evt);
            }
        });

        createdPlayersText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createdPlayersText.setText("Created Players");

        pTypeSubText.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        pTypeSubText.setText("Player Type");

        pStartLocSubText.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        pStartLocSubText.setText("Player Starting Location");

        pColorSubText.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        pColorSubText.setText("Player Color");

        pTypeText.setText("None Yet.");

        pStartLocText.setText("None Yet");

        pColorPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pColorPanelLayout = new javax.swing.GroupLayout(pColorPanel);
        pColorPanel.setLayout(pColorPanelLayout);
        pColorPanelLayout.setHorizontalGroup(
            pColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );
        pColorPanelLayout.setVerticalGroup(
            pColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        playerRegButton.setText("Register New Player");
        playerRegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerRegButtonActionPerformed(evt);
            }
        });

        editPlayerButton.setText("Edit Selected Player");
        editPlayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPlayerButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete Selected Player");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playerCreationPanelLayout = new javax.swing.GroupLayout(playerCreationPanel);
        playerCreationPanel.setLayout(playerCreationPanelLayout);
        playerCreationPanelLayout.setHorizontalGroup(
            playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerCreationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerCreationPanelLayout.createSequentialGroup()
                        .addComponent(registeredPlayerCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(playerCreationPanelLayout.createSequentialGroup()
                        .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(playerCreationPanelLayout.createSequentialGroup()
                                .addComponent(pTypeSubText)
                                .addGap(119, 119, 119)
                                .addComponent(pTypeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(createdPlayersText)
                            .addGroup(playerCreationPanelLayout.createSequentialGroup()
                                .addComponent(pStartLocSubText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pStartLocText))
                            .addGroup(playerCreationPanelLayout.createSequentialGroup()
                                .addComponent(pColorSubText)
                                .addGap(117, 117, 117)
                                .addComponent(pColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(playerRegButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editPlayerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        playerCreationPanelLayout.setVerticalGroup(
            playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerCreationPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(createdPlayersText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registeredPlayerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pTypeSubText)
                    .addComponent(pTypeText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pStartLocSubText)
                    .addComponent(pStartLocText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerCreationPanelLayout.createSequentialGroup()
                        .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pColorSubText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pColorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(playerCreationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerRegButton)
                            .addComponent(editPlayerButton)))
                    .addGroup(playerCreationPanelLayout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        text_advancedsettings.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_advancedsettings.setText("Advanced Settings");

        text_advanced_hide.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_advanced_hide.setText("[Hide]");
        text_advanced_hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                text_advanced_hideMousePressed(evt);
            }
        });

        advancedPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Database URL");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("DB Driver");

        urlField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        urlField.setText("URL");

        portField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        portField.setText("3306");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("DB Username");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("DB Password");

        usernameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameField.setText("Grimeron");

        driverSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JDBC / JNDI", "Derby" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Database Name");

        nameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameField.setText("Name");

        useConnection.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        useConnection.setText("Use this Connection");

        testDBBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        testDBBtn.setText("Test Connection");
        testDBBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testDBBtnActionPerformed(evt);
            }
        });

        text_teststatus.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        text_teststatus.setForeground(new java.awt.Color(255, 51, 51));
        text_teststatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        text_teststatus.setText("Status: No Connection");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setText("Database Port");

        javax.swing.GroupLayout advancedPanelLayout = new javax.swing.GroupLayout(advancedPanel);
        advancedPanel.setLayout(advancedPanelLayout);
        advancedPanelLayout.setHorizontalGroup(
            advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(advancedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(portField)
                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                    .addComponent(urlField))
                .addGap(18, 18, 18)
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(advancedPanelLayout.createSequentialGroup()
                        .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(driverSelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordField)))
                    .addGroup(advancedPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(useConnection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(testDBBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(text_teststatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        advancedPanelLayout.setVerticalGroup(
            advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(advancedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(urlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(useConnection))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(testDBBtn)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(advancedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(driverSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_teststatus))
                .addGap(16, 16, 16))
        );

        submitButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitButton.setText("Submit and Play");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_generalsettings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_general_hide)
                .addGap(8, 8, 8)
                .addComponent(jSeparator1))
            .addComponent(setupText, javax.swing.GroupLayout.DEFAULT_SIZE, 1139, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_player_settings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_player_hide)
                .addGap(8, 8, 8)
                .addComponent(jSeparator4))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_advancedsettings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_advanced_hide)
                .addGap(8, 8, 8)
                .addComponent(jSeparator6))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(advancedPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(generalPanel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerCreationPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(setupText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(text_general_hide)
                        .addComponent(text_generalsettings))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(text_player_hide)
                        .addComponent(text_player_settings))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerCreationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(text_advanced_hide)
                        .addComponent(text_advancedsettings))
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(advancedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text_general_hideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_general_hideMousePressed
        togglePanel(generalPanel, text_general_hide);
    }//GEN-LAST:event_text_general_hideMousePressed

    private void text_player_hideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_player_hideMousePressed
        togglePanel(playerCreationPanel, text_player_hide);
    }//GEN-LAST:event_text_player_hideMousePressed

    private void registeredPlayerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registeredPlayerComboActionPerformed

        try
        {
            Player selectedPlayer = (Player)registeredPlayerCombo.getSelectedItem();

            pStartLocText.setText(selectedPlayer.getTile().toString());

            pTypeText.setText(selectedPlayer.getType().getDescription());

            pColorPanel.setBackground(selectedPlayer.getColor());

        }catch(NullPointerException | ClassCastException ex){}
    }//GEN-LAST:event_registeredPlayerComboActionPerformed

    private void playerRegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerRegButtonActionPerformed
        GrimeronPlayerCreator newPlayerCreator = new GrimeronPlayerCreator(game, this);
        newPlayerCreator.setVisible(true);
    }//GEN-LAST:event_playerRegButtonActionPerformed

    private void editPlayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPlayerButtonActionPerformed

        if(registeredPlayerCombo.getSelectedItem() == null){
            return;
        }

        try
        {
            Player selectedPlayer = (Player)registeredPlayerCombo.getSelectedItem();

            selectedPlayer.getTile().setState(Tile.State.OPEN);
            selectedPlayer.getStartingTile().setState(Tile.State.OPEN);

            GrimeronPlayerCreator newPlayerCreator = new GrimeronPlayerCreator(game, this);
            newPlayerCreator.setVisible(true);

            if(selectedPlayer.getType().equals(Player.Type.HUMAN))
            {
                newPlayerCreator.humanRadioButton.setSelected(true);
            } else {
                newPlayerCreator.botRadioButton.setSelected(true);
            }

            newPlayerCreator.playerNameSelector.setText(selectedPlayer.name);

            newPlayerCreator.playerColorSelector.setColor(selectedPlayer.getColor());

            this.registeredPlayerCombo.removeItem(registeredPlayerCombo.getSelectedItem());

            ruleSet.getPlayers().remove(selectedPlayer);

        }catch(ClassCastException | NullPointerException ex){}
    }//GEN-LAST:event_editPlayerButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try{
            Player selectedPlayer = (Player)registeredPlayerCombo.getSelectedItem();

            selectedPlayer.getTile().setState(Tile.State.OPEN);
            selectedPlayer.getStartingTile().setState(Tile.State.OPEN);

            ruleSet.getPlayers().remove((Player)registeredPlayerCombo.getSelectedItem());
            registeredPlayerCombo.removeItem(registeredPlayerCombo.getSelectedItem());

            pColorPanel.setBackground(Color.LIGHT_GRAY);
            pStartLocText.setText("None");
            pTypeText.setText("None");
        } catch (Exception ex) {
            return;
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void text_advanced_hideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_advanced_hideMousePressed
        togglePanel(advancedPanel, text_advanced_hide);
    }//GEN-LAST:event_text_advanced_hideMousePressed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if(rapidCheckbox.isSelected())
        {


            if(graphicOverrideEnabled.isSelected())
            {
                ruleSet.rapidGraphicOverrideEnabled = true;
            }
            int rapidModeCount = 0;
            
            try
            {
                rapidModeCount = Integer.parseInt(gameCountInput.getText());
            } catch(Exception e){ }
            ruleSet.rapidModeCount = Math.abs(rapidModeCount);
        }
        verify();
        try
        {
            //int dimension = Integer.parseInt(gridDimensionField.getText());
            //GrimeronGrid finalGrid = new GrimeronGrid(dimension, dimension);
            //game.getGameFrame().setGrid(finalGrid);
        } catch(Exception ex) {
            
        }
        
        isSetup = true;
    }//GEN-LAST:event_submitButtonActionPerformed

    private void testDBBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testDBBtnActionPerformed
        String host = urlField.getText();
        String port = portField.getText();
        String dbName = nameField.getText();
        String user = usernameField.getText();
        String pass = passwordField.getText();
            
        String url = "jdbc:mysql://" + host + ":" + port + "/" + dbName;
            
        Connection testCon = DBConnector.getSimpleConnection(url, user, pass);
            
        if(testCon == null)
        {
            text_teststatus.setForeground(Color.RED);
            text_teststatus.setText("Status: Connection Failed");
        } 
        else
        {
            text_teststatus.setForeground(Color.GREEN);
            text_teststatus.setText("Status: Connection Good!");
        }
    }//GEN-LAST:event_testDBBtnActionPerformed

    private void rapidCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rapidCheckboxActionPerformed
        ruleSet.rapidMode = true;
    }//GEN-LAST:event_rapidCheckboxActionPerformed

    private void graphicOverrideEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphicOverrideEnabledActionPerformed
        ruleSet.rapidGraphicOverrideEnabled = true;
    }//GEN-LAST:event_graphicOverrideEnabledActionPerformed

    private void incognitoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incognitoCheckBoxActionPerformed
        ruleSet.incognitoMode = true;
    }//GEN-LAST:event_incognitoCheckBoxActionPerformed

    private void statisticModeSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statisticModeSelectionActionPerformed
        ruleSet.statisticMode = true;
    }//GEN-LAST:event_statisticModeSelectionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel advancedPanel;
    private javax.swing.JLabel createdPlayersText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox driverSelector;
    private javax.swing.JButton editPlayerButton;
    private javax.swing.JTextField gameCountInput;
    private javax.swing.JLayeredPane generalPanel;
    private javax.swing.JCheckBox graphicOverrideEnabled;
    private javax.swing.JFormattedTextField gridDimensionField;
    private javax.swing.JLabel gridDimensionText;
    private javax.swing.JCheckBox incognitoCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JFormattedTextField nameField;
    private javax.swing.JPanel pColorPanel;
    private javax.swing.JLabel pColorSubText;
    private javax.swing.JLabel pStartLocSubText;
    private javax.swing.JLabel pStartLocText;
    private javax.swing.JLabel pTypeSubText;
    private javax.swing.JLabel pTypeText;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPanel playerCreationPanel;
    private javax.swing.JButton playerRegButton;
    private javax.swing.JFormattedTextField portField;
    private javax.swing.JCheckBox rapidCheckbox;
    private javax.swing.JComboBox registeredPlayerCombo;
    private javax.swing.JLabel setupText;
    private javax.swing.JCheckBox statisticModeSelection;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton testDBBtn;
    private javax.swing.JLabel text_advanced_hide;
    private javax.swing.JLabel text_advancedsettings;
    private javax.swing.JLabel text_general_hide;
    private javax.swing.JLabel text_generalsettings;
    private javax.swing.JLabel text_player_hide;
    private javax.swing.JLabel text_player_settings;
    private javax.swing.JLabel text_teststatus;
    private javax.swing.JFormattedTextField urlField;
    private javax.swing.JCheckBox useConnection;
    private javax.swing.JFormattedTextField usernameField;
    // End of variables declaration//GEN-END:variables
    
    public void togglePanel(JComponent panel, JLabel hideText)
    {
        panel.setVisible(!panel.isVisible());
        
        if(panel.isVisible())
        {
            hideText.setText("[Hide]");
        }
        else
        {
            hideText.setText("[Show]");
        }
    }
    
    public boolean isSetup()
    {
        return isSetup;
    }
    
    public javax.swing.JComboBox getRegisteredPlayerCombo ()
    {
        return this.registeredPlayerCombo;
    }
    
    private void verify()
    {       
        if(ruleSet.getPlayers().size() == 1)
        {
            Bot a = new Bot(grid.getBottomRight(), "Red", dbHandler, grid);
            
            ruleSet.addPlayer(a);
            
            ruleSet.getPlayers().get(0).getTile().setState(Tile.State.OPEN);
            ruleSet.getPlayers().get(0).setStartingTile(grid.getTopLeft());
            ruleSet.getPlayers().get(0).setTile(grid.getTopLeft());
        }
        
        if(ruleSet.rapidMode)
        {
            for (Iterator<Player> it = ruleSet.getPlayers().iterator(); it.hasNext();) 
            {
                Player player = it.next();
                if(player.getType().equals(Player.Type.HUMAN))
                {
                    it.remove();
                }
            }
            
            if(ruleSet.getPlayers().size() < 2)
            {
                ruleSet.getPlayers().clear();
                Bot a = new Bot(game.getGameFrame().getGamePanel().getGrid().getTopLeft(), "Red", dbHandler, grid); //Top Left
                Bot b = new Bot(game.getGameFrame().getGamePanel().getGrid().getTopRight(), "Orange", dbHandler, grid); //Top Right
                Bot c = new Bot(game.getGameFrame().getGamePanel().getGrid().getBottomLeft(), "Yellow", dbHandler, grid); //Bottom Left
                Bot d = new Bot(game.getGameFrame().getGamePanel().getGrid().getBottomRight(), "Blue", dbHandler, grid); //Botton Right
                
                a.setColor(Color.RED);
                b.setColor(Color.ORANGE);
                c.setColor(Color.YELLOW);
                d.setColor(Color.BLUE);
        
                ruleSet.assignPlayers(a, b, c, d);
            }
        }
        
        if(!ruleSet.rapidMode)
        {
            if(ruleSet.getPlayers().size() < 2)
            {
                ruleSet.getPlayers().clear();
                Bot a = new Bot(game.getGameFrame().getGamePanel().getGrid().getTopLeft(), "Red", dbHandler, grid); //Top Left
                Bot b = new Bot(game.getGameFrame().getGamePanel().getGrid().getTopRight(), "Orange", dbHandler, grid); //Top Right
                Bot c = new Bot(game.getGameFrame().getGamePanel().getGrid().getBottomLeft(), "Yellow", dbHandler, grid); //Bottom Left
                Human d = new Human(game.getGameFrame().getGamePanel().getGrid().getBottomRight(), "Blue", grid); //Bottom Right
                
                a.setColor(Color.RED);
                b.setColor(Color.ORANGE);
                c.setColor(Color.YELLOW);
                d.setColor(Color.BLUE);
        
                ruleSet.assignPlayers(a, b, c, d);
            }
        }
    }
}
