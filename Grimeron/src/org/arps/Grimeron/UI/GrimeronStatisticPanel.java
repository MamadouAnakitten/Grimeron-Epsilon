/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.arps.Grimeron.UI;

import org.arps.Grimeron.Grimeron;
import org.arps.Grimeron.entity.Player;
import org.arps.Grimeron.utils.RuleSet;
import org.arps.Grimeron.utils.StatisticSet;

/**
 *
 * @author richa_000
 */
public class GrimeronStatisticPanel extends javax.swing.JPanel {

    private String bestWeightedMoves;
    private String worstWeightedMoves;
    
    private String mostFrequentMoves;
    private String leastFrequentMoves;
    
    private StatisticSet stats;
    
    
    /**
     * Creates new form GrimeronStatisticPanel
     */
    public GrimeronStatisticPanel(StatisticSet stats) {
        this.stats = stats;
        initComponents();
        initGameStats();
        this.repaint();
    }
    
    public GrimeronStatisticPanel(){
        this.stats = new StatisticSet();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        masterTabPanel = new javax.swing.JTabbedPane();
        generalStatsPanel = new javax.swing.JPanel();
        generalStatsTabbedPanel = new javax.swing.JTabbedPane();
        mostFrequentTab = new javax.swing.JPanel();
        mostFrequentScroll = new javax.swing.JScrollPane();
        mostFrequentTable = new javax.swing.JTable();
        leastFrequentTab = new javax.swing.JPanel();
        leastFrequentScroll = new javax.swing.JScrollPane();
        leastFrequentTable = new javax.swing.JTable();
        bestWeightTab = new javax.swing.JPanel();
        bestWeightScroll = new javax.swing.JScrollPane();
        bestWeightedTable = new javax.swing.JTable();
        worstWeightTab = new javax.swing.JPanel();
        worstWeightScroll = new javax.swing.JScrollPane();
        worstWeightedTable = new javax.swing.JTable();
        text_averageGameLen = new javax.swing.JLabel();
        averageGameLength = new javax.swing.JLabel();
        gameStatPanel = new javax.swing.JPanel();
        playerInfoPane = new javax.swing.JTabbedPane();
        selectAPlayerPanel = new javax.swing.JPanel();
        text_selectPlayer = new javax.swing.JLabel();
        playerSelectorScrollPane = new javax.swing.JScrollPane();
        try{
            Player[] playerArray = new Player[stats.getPlayerList().size()];
            playerArray = stats.getPlayerList().toArray(playerArray);
            playerSelector = new javax.swing.JList(playerArray);
            text_playerWC = new javax.swing.JLabel();
            playerWinCount = new javax.swing.JLabel();
            text_averagePlace = new javax.swing.JLabel();
            averagePlace = new javax.swing.JLabel();
            playerMoveInfoPanel = new javax.swing.JPanel();
            moveStatScrollPane = new javax.swing.JScrollPane();
            playerMoveSelector = new javax.swing.JList();
            moveInfoText = new javax.swing.JLabel();
            text_avgLifespan = new javax.swing.JLabel();
            averageLifspan = new javax.swing.JLabel();
            text_title = new javax.swing.JLabel();

            masterTabPanel.addChangeListener(new javax.swing.event.ChangeListener() {
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    masterTabPanelmasterTabSwitch(evt);
                }
            });

            mostFrequentTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Frequency", "From Tile", "Direction", "Weight"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            mostFrequentTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
            mostFrequentTable.setRowHeight(32);
            mostFrequentScroll.setViewportView(mostFrequentTable);

            javax.swing.GroupLayout mostFrequentTabLayout = new javax.swing.GroupLayout(mostFrequentTab);
            mostFrequentTab.setLayout(mostFrequentTabLayout);
            mostFrequentTabLayout.setHorizontalGroup(
                mostFrequentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mostFrequentTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(mostFrequentScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addContainerGap())
            );
            mostFrequentTabLayout.setVerticalGroup(
                mostFrequentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mostFrequentTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(mostFrequentScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addContainerGap())
            );

            generalStatsTabbedPanel.addTab("Most Frequent Move", mostFrequentTab);

            leastFrequentTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Frequency", "From Tile", "Direction", "Weight"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            leastFrequentTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
            leastFrequentTable.setRowHeight(32);
            leastFrequentScroll.setViewportView(leastFrequentTable);

            javax.swing.GroupLayout leastFrequentTabLayout = new javax.swing.GroupLayout(leastFrequentTab);
            leastFrequentTab.setLayout(leastFrequentTabLayout);
            leastFrequentTabLayout.setHorizontalGroup(
                leastFrequentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(leastFrequentTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(leastFrequentScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addContainerGap())
            );
            leastFrequentTabLayout.setVerticalGroup(
                leastFrequentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(leastFrequentTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(leastFrequentScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addContainerGap())
            );

            generalStatsTabbedPanel.addTab("Least Frequent Moves", leastFrequentTab);

            bestWeightedTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Frequency", "From Tile", "Direction", "Weight"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            bestWeightedTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
            bestWeightedTable.setRowHeight(32);
            bestWeightScroll.setViewportView(bestWeightedTable);

            javax.swing.GroupLayout bestWeightTabLayout = new javax.swing.GroupLayout(bestWeightTab);
            bestWeightTab.setLayout(bestWeightTabLayout);
            bestWeightTabLayout.setHorizontalGroup(
                bestWeightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bestWeightTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bestWeightScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addContainerGap())
            );
            bestWeightTabLayout.setVerticalGroup(
                bestWeightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bestWeightTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bestWeightScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addContainerGap())
            );

            generalStatsTabbedPanel.addTab("Best Weighted Moves", bestWeightTab);

            worstWeightedTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Frequency", "From Tile", "Direction", "Weight"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            worstWeightedTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
            worstWeightedTable.setRowHeight(32);
            worstWeightScroll.setViewportView(worstWeightedTable);

            javax.swing.GroupLayout worstWeightTabLayout = new javax.swing.GroupLayout(worstWeightTab);
            worstWeightTab.setLayout(worstWeightTabLayout);
            worstWeightTabLayout.setHorizontalGroup(
                worstWeightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(worstWeightTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(worstWeightScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addContainerGap())
            );
            worstWeightTabLayout.setVerticalGroup(
                worstWeightTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(worstWeightTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(worstWeightScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addContainerGap())
            );

            generalStatsTabbedPanel.addTab("Worst Weighted Moves", worstWeightTab);

            text_averageGameLen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            text_averageGameLen.setText("Average Game Length");

            averageGameLength.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            averageGameLength.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            averageGameLength.setText("0");

            javax.swing.GroupLayout generalStatsPanelLayout = new javax.swing.GroupLayout(generalStatsPanel);
            generalStatsPanel.setLayout(generalStatsPanelLayout);
            generalStatsPanelLayout.setHorizontalGroup(
                generalStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(generalStatsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(generalStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(generalStatsTabbedPanel)
                        .addGroup(generalStatsPanelLayout.createSequentialGroup()
                            .addComponent(text_averageGameLen)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(averageGameLength, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            generalStatsPanelLayout.setVerticalGroup(
                generalStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(generalStatsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(generalStatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(text_averageGameLen, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(averageGameLength, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(generalStatsTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            masterTabPanel.addTab("General Stats", generalStatsPanel);

            text_selectPlayer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            text_selectPlayer.setText("Select a player!");

        } catch(Exception ex){
            playerSelector = new javax.swing.JList();
        }
        playerSelector.setBackground(new java.awt.Color(204, 204, 204));
        playerSelector.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                playerSelectorValueChanged(evt);
            }
        });
        playerSelectorScrollPane.setViewportView(playerSelector);

        text_playerWC.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        text_playerWC.setText("Player Win Count:");

        playerWinCount.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        playerWinCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerWinCount.setText("0");

        text_averagePlace.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        text_averagePlace.setText("Average Place");

        averagePlace.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        averagePlace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        averagePlace.setText("0");

        playerMoveInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Player Move Stats", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        playerMoveSelector.setBackground(new java.awt.Color(204, 204, 204));
        moveStatScrollPane.setViewportView(playerMoveSelector);

        moveInfoText.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        moveInfoText.setText("Move Information: ");
        moveInfoText.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout playerMoveInfoPanelLayout = new javax.swing.GroupLayout(playerMoveInfoPanel);
        playerMoveInfoPanel.setLayout(playerMoveInfoPanelLayout);
        playerMoveInfoPanelLayout.setHorizontalGroup(
            playerMoveInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playerMoveInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerMoveInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(moveInfoText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moveStatScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE))
                .addContainerGap())
        );
        playerMoveInfoPanelLayout.setVerticalGroup(
            playerMoveInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerMoveInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moveStatScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(moveInfoText, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        text_avgLifespan.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        text_avgLifespan.setText("Average Lifespan");

        averageLifspan.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        averageLifspan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        averageLifspan.setText("0");

        javax.swing.GroupLayout selectAPlayerPanelLayout = new javax.swing.GroupLayout(selectAPlayerPanel);
        selectAPlayerPanel.setLayout(selectAPlayerPanelLayout);
        selectAPlayerPanelLayout.setHorizontalGroup(
            selectAPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectAPlayerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectAPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(playerSelectorScrollPane, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, selectAPlayerPanelLayout.createSequentialGroup()
                        .addComponent(text_selectPlayer)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, selectAPlayerPanelLayout.createSequentialGroup()
                        .addComponent(text_playerWC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerWinCount, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_averagePlace)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(averagePlace, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(text_avgLifespan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(averageLifspan, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(playerMoveInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        selectAPlayerPanelLayout.setVerticalGroup(
            selectAPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectAPlayerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text_selectPlayer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerSelectorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(selectAPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_playerWC)
                    .addComponent(playerWinCount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_averagePlace)
                    .addComponent(averagePlace)
                    .addComponent(text_avgLifespan)
                    .addComponent(averageLifspan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerMoveInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        playerInfoPane.addTab("Player Info", selectAPlayerPanel);

        javax.swing.GroupLayout gameStatPanelLayout = new javax.swing.GroupLayout(gameStatPanel);
        gameStatPanel.setLayout(gameStatPanelLayout);
        gameStatPanelLayout.setHorizontalGroup(
            gameStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerInfoPane)
                .addContainerGap())
        );
        gameStatPanelLayout.setVerticalGroup(
            gameStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerInfoPane)
                .addContainerGap())
        );

        masterTabPanel.addTab("Game Specific Stats", gameStatPanel);

        text_title.setFont(new java.awt.Font("Gill Sans MT", 0, 36)); // NOI18N
        text_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        text_title.setText("Game Statistics");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(text_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masterTabPanel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(masterTabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void playerSelectorValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_playerSelectorValueChanged
        updatePlayerstat();
        System.out.println("Player selection event occured.");
    }//GEN-LAST:event_playerSelectorValueChanged

    private void masterTabPanelmasterTabSwitch(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_masterTabPanelmasterTabSwitch
        //Update every tab of every subtab...
        
        initGameStats();
    }//GEN-LAST:event_masterTabPanelmasterTabSwitch


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel averageGameLength;
    private javax.swing.JLabel averageLifspan;
    private javax.swing.JLabel averagePlace;
    private javax.swing.JScrollPane bestWeightScroll;
    private javax.swing.JPanel bestWeightTab;
    private javax.swing.JTable bestWeightedTable;
    private javax.swing.JPanel gameStatPanel;
    private javax.swing.JPanel generalStatsPanel;
    private javax.swing.JTabbedPane generalStatsTabbedPanel;
    private javax.swing.JScrollPane leastFrequentScroll;
    private javax.swing.JPanel leastFrequentTab;
    private javax.swing.JTable leastFrequentTable;
    private javax.swing.JTabbedPane masterTabPanel;
    private javax.swing.JScrollPane mostFrequentScroll;
    private javax.swing.JPanel mostFrequentTab;
    private javax.swing.JTable mostFrequentTable;
    private javax.swing.JLabel moveInfoText;
    private javax.swing.JScrollPane moveStatScrollPane;
    private javax.swing.JTabbedPane playerInfoPane;
    private javax.swing.JPanel playerMoveInfoPanel;
    private javax.swing.JList playerMoveSelector;
    private javax.swing.JList playerSelector;
    private javax.swing.JScrollPane playerSelectorScrollPane;
    private javax.swing.JLabel playerWinCount;
    private javax.swing.JPanel selectAPlayerPanel;
    private javax.swing.JLabel text_averageGameLen;
    private javax.swing.JLabel text_averagePlace;
    private javax.swing.JLabel text_avgLifespan;
    private javax.swing.JLabel text_playerWC;
    private javax.swing.JLabel text_selectPlayer;
    private javax.swing.JLabel text_title;
    private javax.swing.JScrollPane worstWeightScroll;
    private javax.swing.JPanel worstWeightTab;
    private javax.swing.JTable worstWeightedTable;
    // End of variables declaration//GEN-END:variables
    
    private void initGameStats() {

    }
    
    //Switched convention to distinguish from graphical components.
    private void updatePlayerstat(){
        int player_wins;
        int player_average_place;
        int average_lifespan;
        
        Player selectedPlayer = (Player)playerSelector.getSelectedValue();

        
        
        moveStatScrollPane.setViewportView(playerMoveSelector);
        
        System.out.println(playerSelector.getSelectedIndex());
    }
    
    private void initGlobalStats(){
        
    }
}
